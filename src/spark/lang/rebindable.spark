#*****************************************************************************#
#* Copyright (c) 2004-2007, SRI International.                               *#
#* All rights reserved.                                                      *#
#*                                                                           *#
#* Redistribution and use in source and binary forms, with or without        *#
#* modification, are permitted provided that the following conditions are    *#
#* met:                                                                      *#
#*   * Redistributions of source code must retain the above copyright        *#
#*     notice, this list of conditions and the following disclaimer.         *#
#*   * Redistributions in binary form must reproduce the above copyright     *#
#*     notice, this list of conditions and the following disclaimer in the   *#
#*     documentation and/or other materials provided with the distribution.  *#
#*   * Neither the name of SRI International nor the names of its            *#
#*     contributors may be used to endorse or promote products derived from  *#
#*     this software without specific prior written permission.              *#
#*                                                                           *#
#* THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS       *#
#* "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT         *#
#* LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR     *#
#* A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT      *#
#* OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,     *#
#* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT          *#
#* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,     *#
#* DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY     *#
#* THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT       *#
#* (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE     *#
#* OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.      *#
#*****************************************************************************#
#* "$Revision: 24 $" *#
#* $Source: /homedir/cvs/cvsroot/spark/src/spark/lang/rebindable.spark,v $ *#
#*****************************************************************************#

{defaction (rebindableCreate $rebindable $initvalue)
 doc: "Create Rebindable object"
 imp: (pyAction "-+" (pyModRaw "spark.lang.rebindable" "RebindableObject"))}  

{defaction (rebindableSet $rebindable $value)
 doc: "set rebindable object value"
 imp: (pyAction "++" (pyMeth "set_value"))}

{defaction (rebindableAdd $rebindable $value)
 doc: "increment by or append with $value"
 imp: (pyAction "++" (pyMeth "add_value"))}

{defaction (rebindableRemove $rebindable $value)
 doc: "decrement by or remove from $value"
 imp: (pyAction "++" (pyMeth "remove_value"))}

{deffunction (rebindableGet $x)
 doc: "Get rebindable object value"
 imp: (pyFunction "+" (pyMeth "get_value"))}

# Usage:
# [do: (rebindableCreate $x [])] sets $x to a RebindableObject with initial value []
# [do: (rebindableSet $x 42)] resets the value of the RebindableObject $x
# [do: (rebindableAdd $x $y)]
#  if $x is a RebindableObject with a numeric value: increments the value by $y
#  if $x is a RebindableObject with a list value: appends $y to the end of the list
# (rebindableGet $x) returns the current value of RebindableObject $x

#  [seq: [do: (rebindableCreate $x [])] [do: (rebindableAdd $x 1)] [do: (print "$x=>%s" [(rebindableGet $x)])]]

exportall:
