#*****************************************************************************#
#* Copyright (c) 2004-2007, SRI International.                               *#
#* All rights reserved.                                                      *#
#*                                                                           *#
#* Redistribution and use in source and binary forms, with or without        *#
#* modification, are permitted provided that the following conditions are    *#
#* met:                                                                      *#
#*   * Redistributions of source code must retain the above copyright        *#
#*     notice, this list of conditions and the following disclaimer.         *#
#*   * Redistributions in binary form must reproduce the above copyright     *#
#*     notice, this list of conditions and the following disclaimer in the   *#
#*     documentation and/or other materials provided with the distribution.  *#
#*   * Neither the name of SRI International nor the names of its            *#
#*     contributors may be used to endorse or promote products derived from  *#
#*     this software without specific prior written permission.              *#
#*                                                                           *#
#* THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS       *#
#* "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT         *#
#* LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR     *#
#* A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT      *#
#* OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,     *#
#* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT          *#
#* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,     *#
#* DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY     *#
#* THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT       *#
#* (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE     *#
#* OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.      *#
#*****************************************************************************#
#* "$Revision: 24 $" *#
#* $Source: /homedir/cvs/cvsroot/spark/src/spark/tests/event_test.spark,v $ *#
#*****************************************************************************#
importfrom: spark.lang.event
importfrom: spark.lang.list

# Test that we have a record of all the events that are posted

{defaction (test $testnumber)}

{defprocedure test1
  cue: [do: (test $x)]
  precondition: (= $x 1)
  body: [seq: [retract: (RecordingAllEvents)]
	      [conclude: (MyPred)]
	      [conclude: (RecordingAllEvents)]
	      [do: (myact 2 $result)]
	      [set: $events (solutionspat [$e] (EventPosted $e) $e)]
	      #[retract: (RecordingAllEvents)]
	      [do: (print "%d Events:\n%r" [(length $events) $events])]
	      [forall: [$ev] (EventPosted $ev)
		       [do: (print "Event: %s args: %s" [$ev (eventInputArguments $ev)])]]]}

{defaction (myact $levels $result)}
{defpredicate (MyPred)}

{defprocedure procMyact1
  cue: [do: (myact $x $result)]
  precondition: (> $x 0)
  body: [seq:
	  [parallel:
	    [do: (myact (- $x 1) $result1)]
	    [do: (myact (- $x 1) $result2)]]
	  [set: $result (+ $result1 $result2)]]}

{defprocedure procMyact2
  cue: [do: (myact $x $result)]
  precondition: (<= $x 0)
  body: [wait: (MyPred) [set: $result 1]]}

